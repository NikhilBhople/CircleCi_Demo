version: 2.1

workflows: # Define a Workflow running the build job, then the deploy job
  version: 2
  build-deploy: # Make a workflow to build and deploy your project
    jobs:
      - build
      - deploy:
          requires:
            - build # Only run deploy job once the build job has completed
          filters:
            branches:
              only: master # Only deploy when the commit is on the Master branch


jobs:
  build:
    working_directory: ~/code
    docker:
          - image: circleci/android:api-29
    steps:
      - checkout

      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      - run:
          name: chmod permissions
          command: chmod +x ./gradlew

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      - run:
          name: Run Detekt & Ktlint
          command: ./gradlew detektAll

      - run:
          name: Run Tests
          command: ./gradlew lint test

      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports

      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results

      - run:
          name: Building Debug apk
          command: ./gradlew :app:assembleDebug

      - store_artifacts:
          name: Storing artifacts
          path: $ARTIFACTS_PATH


  deploy:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-29-node

    steps:
      - run:
          name: Download appcenter CLI
          command: sudo npm install appcenter-cli -g

      - run:
          name: Login to APP CENTER
          command: appcenter login --token $APP_CENTER_TOKEN # getting token from environment variables

      - run:
          name: Deliver to appcenter
          command: appcenter distribute release --debug --app USER/APP --file $ARTIFACTS_PATH/app-debug.apk --group "App Testers"
          # See https://circleci.com/docs/2.0/deployment-examples/index.html for deploy examples

